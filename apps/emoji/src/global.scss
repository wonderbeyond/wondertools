@use "sass:color";
@use "theme";
@use "@material/linear-progress/index" as linear-progress;
@use "@material/button/index" as mdc-button;
@use "@material/elevation/mdc-elevation";
@use "breakpoints" as bp;

// BEGIN: The missing styles from SMUI!
.mdc-theme--primary {
  color: theme.$primary !important;
  color: var(--mdc-theme-primary, theme.$primary) !important;
}

.mdc-theme--secondary {
  color: theme.$secondary !important;
  color: var(--mdc-theme-secondary, theme.$secondary) !important;
}

.mdc-theme--background {
  background-color: theme.$background;
  background-color: var(--mdc-theme-background, theme.$background);
}

.mdc-theme--surface {
  background-color: theme.$surface;
  background-color: var(--mdc-theme-surface, theme.$surface);
}

.mdc-theme--error {
  color: theme.$error !important;
  color: var(--mdc-theme-error, theme.$error) !important;
}

.mdc-theme--on-primary {
  color: theme.$on-primary !important;
  color: var(--mdc-theme-on-primary, theme.$on-primary) !important;
}

.mdc-theme--on-secondary {
  color: theme.$on-secondary !important;
  color: var(--mdc-theme-on-secondary, theme.$on-secondary) !important;
}

.mdc-theme--on-surface {
  color: theme.$on-surface !important;
  color: var(--mdc-theme-on-surface, theme.$on-surface) !important;
}

.mdc-theme--on-error {
  color: theme.$on-error !important;
  color: var(--mdc-theme-on-error, theme.$on-error) !important;
}

.mdc-theme--text-primary-on-background {
  color: theme.$on-primary !important;
  color: var(--mdc-theme-text-primary-on-background, theme.$on-primary) !important;
}

.mdc-theme--text-secondary-on-background {
  color: theme.$secondary !important;
  color: var(--mdc-theme-text-secondary-on-background, theme.$secondary) !important;
}

.mdc-theme--text-hint-on-background {
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-disabled-on-background {
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-icon-on-background {
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-primary-on-light {
  color: rgba(0, 0, 0, 0.87) !important;
  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) !important;
}

.mdc-theme--text-secondary-on-light {
  color: rgba(0, 0, 0, 0.54) !important;
  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)) !important;
}

.mdc-theme--text-hint-on-light {
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-disabled-on-light {
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-icon-on-light {
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-icon-on-light, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-primary-on-dark {
  color: white !important;
  color: var(--mdc-theme-text-primary-on-dark, white) !important;
}

.mdc-theme--text-secondary-on-dark {
  color: rgba(255, 255, 255, 0.7) !important;
  color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)) !important;
}

.mdc-theme--text-hint-on-dark {
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-disabled-on-dark {
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-icon-on-dark {
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-icon-on-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--primary-bg {
  background-color: theme.$primary !important;
  background-color: var(--mdc-theme-primary, theme.$primary) !important;
}

.mdc-theme--secondary-bg {
  background-color: theme.$secondary !important;
  background-color: var(--mdc-theme-secondary, theme.$secondary) !important;
}
// END: The missing styles from SMUI!

html,
body {
  margin: 0;
  padding: 0;
  background-color: theme.$surface;
  color: theme.$on-surface;
}

a {
  color: #40b3ff;
}
a:visited {
  color: color.scale(#40b3ff, $lightness: -35%);
}

.button-shaped-round {
  @include mdc-button.shape-radius(999px);
}

$breakpoint-names: map-keys(bp.$breakpoints);
$breakpoint-names-first: nth($breakpoint-names, 1);
$breakpoint-names-last: nth($breakpoint-names, length($breakpoint-names));

// Elements that only be shown from media above a breakpoint
@each $bpa in $breakpoint-names {
  @if $bpa != $breakpoint-names-first {
    .respond-to-media-#{$bpa} {
      @include bp.media-breakpoint-down($bpa) {
        display: none;
      }
    }
  }
}

.search-box-container {
  flex: 1 1.2 20em;
  padding-left: 1.5em;
  padding-right: 1.5em;

  .search-box {
    display: flex;
    align-items: center;
    padding: 0;
    width: 100%;
    height: 80%;
    border-radius: 1.5em !important;

    & > * {
      display: inline-block;
    }

    .search-input {
      color: var(--mdc-theme-on-surface, theme.$on-surface);

      &::placeholder {
        color: var(--mdc-theme-on-surface, theme.$on-secondary);
        opacity: 0.6;
      }
    }
  }
}

.group-filter-container {
  flex-wrap: nowrap;

  .chip-text-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    .tray {
      height: 0px;
      width: 100%;
      border: 1px dashed theme.$primary;
    }
  }
}

.top-linear-progress {
  @include linear-progress.bar-color(theme.$secondary);
  @include linear-progress.buffer-color(theme.$surface);
}

.emoji-cell {
  cursor: pointer;
  font-size: 45px;
  line-height: 60px;
  display: flex;
  justify-content: center;
  align-items: center;

  transition: transform 0.1s ease-out;

  &:hover {
    transform: scale(1.15) rotate(30deg);
  }
}

.emoji-card {
  .head-bar {
    $bar-height: 0.25em;
    height: $bar-height;
    background: theme.$primary;
    background: linear-gradient(45deg, theme.$secondary, theme.$primary, theme.$secondary);
  }
  .content {
    background-color: theme.$surface;
    display: flex;
    padding: 12px 6px;
    align-items: center;

    .emoji-itself {
      flex: 1 1;
      color: theme.$on-surface;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .emoji-properties {
      flex: 2 1;
      padding: 0 6px;
      .emoji-title {
        color: theme.$primary;
        text-transform: capitalize;
        font-weight: bolder;
      }
    }
  }
}
